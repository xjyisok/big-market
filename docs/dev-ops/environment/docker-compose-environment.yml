version: '3.9'
services:
  # 注册中心 Nacos
  nacos:
    image: nacos/nacos-server:v2.2.3-slim
    container_name: nacos
    restart: always
    ports:
      - "8848:8848"
      - "9848:9848"
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=123456
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      - NACOS_AUTH_IDENTITY_KEY=2222
      - NACOS_AUTH_IDENTITY_VALUE=2xxx
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
    networks:
      - my-network
    depends_on:
      mysql:
        condition: service_healthy

  # MySQL 数据库
  mysql:
    image: mysql:8.0.32
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password --skip-name-resolve
    restart: always
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - my-network
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/sql:/docker-entrypoint-initdb.d
      #- ./mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf:ro
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p123456"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 900s

  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin
    hostname: phpmyadmin
    ports:
      - 8899:80
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=123456
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - my-network

  # Redis
  redis:
    image: redis:7.2.0
    container_name: redis
    restart: always
    hostname: redis
    privileged: true
    ports:
      - 6379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # RedisAdmin
  redis-admin:
    image: spryker/redis-commander:0.8.0
    container_name: redis-admin
    hostname: redis-commander
    restart: always
    ports:
      - 8081:8081
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
      - LANG=C.UTF-8
      - LANGUAGE=C.UTF-8
      - LC_ALL=C.UTF-8
    networks:
      - my-network
    depends_on:
      redis:
        condition: service_healthy

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12.9
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    command: rabbitmq-server
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins

  # Zookeeper
  zookeeper:
    image: zookeeper:3.9.3
    container_name: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    networks:
      - my-network

  # Canal-server
  canal-server:
    image: registry.cn-hangzhou.aliyuncs.com/xfg-studio/canal-server:v1.1.7
    container_name: canal-server
    restart: unless-stopped
    ports:
      - "11111:11111"
    volumes:
      - ./canal/instance.properties:/home/admin/canal-server/conf/example/instance.properties
    depends_on:
      - mysql
    networks:
      - my-network

  # Canal-adapter
  canal-adapter:
    image: registry.cn-hangzhou.aliyuncs.com/xfg-studio/canal-adapter:v1.1.6
    container_name: canal-adapter
    restart: unless-stopped
    ports:
      - "8082:8081"
    volumes:
      - ./canal-adapter/application.yml:/opt/canal-adapter/conf/application.yml
      - ./canal-adapter/es7:/opt/canal-adapter/conf/es7
    depends_on:
      - canal-server
    networks:
      - my-network

  # Elasticsearch
  elasticsearch:
    image: registry.cn-hangzhou.aliyuncs.com/xfg-studio/elasticsearch:7.17.14
    container_name: elasticsearch
    restart: always
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - 'cluster.name=docker-cluster'
      - 'discovery.type=single-node'
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    networks:
      - my-network

  # Kibana
  kibana:
    image: registry.cn-hangzhou.aliyuncs.com/xfg-studio/kibana:7.17.14
    container_name: kibana
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - 'elasticsearch.hosts=http://elasticsearch:9200'
      - I18N_LOCALE=zh-CN
    networks:
      - my-network
    depends_on:
      - elasticsearch

networks:
  my-network:
    driver: bridge

volumes:
  mysql_data:
